daemon off;
worker_processes 3;
pid /var/run/nginx.pid;

events {
    worker_connections 768;
}

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 4096;

    client_max_body_size 512M;
    client_body_temp_path /tmp 1 2;
    client_body_buffer_size 256k;
    client_body_in_file_only off;

    server_tokens off;
    max_ranges 1;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    fastcgi_temp_file_write_size 20m;
    fastcgi_busy_buffers_size 786k;
    fastcgi_buffer_size 512k;
    fastcgi_buffers 16 512k;

    access_log {{ ACCESS_LOG }};
    error_log {{ ERROR_LOG }} info;

    # should be enabled on gateway
    gzip off;

    server {
        listen 8080 default_server;
        root /var/www/riotkit;
        index index.html index.php;
        server_name _;

        index index.php;

        fastcgi_param  GATEWAY_INTERFACE  CGI/1.1;
        fastcgi_param  SERVER_SOFTWARE    Nginx;
        fastcgi_param  QUERY_STRING       $query_string;
        fastcgi_param  REQUEST_METHOD     $request_method;
        fastcgi_param  CONTENT_TYPE       $content_type;
        fastcgi_param  CONTENT_LENGTH     $content_length;
        fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;
        fastcgi_param  SCRIPT_NAME        $fastcgi_script_name;
        fastcgi_param  REQUEST_URI        $request_uri;
        fastcgi_param  DOCUMENT_URI       $document_uri;
        fastcgi_param  DOCUMENT_ROOT      $document_root;
        fastcgi_param  SERVER_PROTOCOL    $server_protocol;
        fastcgi_param  REMOTE_ADDR        $remote_addr;
        fastcgi_param  REMOTE_PORT        $remote_port;
        fastcgi_param  SERVER_ADDR        $server_addr;
        fastcgi_param  SERVER_PORT        $server_port;
        fastcgi_param  SERVER_NAME        $server_name;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;


        set $path_info $fastcgi_path_info;
        fastcgi_param PATH_INFO $path_info;
        fastcgi_index index.php;
        fastcgi_read_timeout 60s;
        fastcgi_hide_header X-Powered-By;
        proxy_hide_header X-Powered-By;

        # https://ayrn.io/how-to-harden-nginx-security/

        location ~* "(eval\(|shell_exec\(|exec\(|system\(unserialize\(|query\(|serialize\(|popen\(|pcntl_exec\(|passthru\(|require\(|include\(|require_once\(|include_once\(|create_function\(|proc_open\(|base64_decode\(|str_rot13\()" { deny all }
        location ~* "(javascript:)(.*)(;)" { return 416 }
        location ~* "(GLOBALS|REQUEST)(=|[|%)" { return 416 }
        location ~* "(<|%3C).*script.*(>|%3)" { return 416 }

        ##
        # Some of SQL syntax
        ##
        set $block_sql_injections 0
        if ($query_string ~ "union.*select.*(") { set $block_sql_injections 1 }
        if ($query_string ~ "union.*all.*select.*") { set $block_sql_injections 1 }
        if ($query_string ~ "concat.*(") { set $block_sql_injections 1 }
        if ($block_sql_injections = 1) { return 416 }

        ##
        # Block common exploits
        ##
        set $block_common_exploits 0;
        if ($query_string ~ "(<|%3C).*script.*(>|%3E)") { set $block_common_exploits 1 }
        if ($query_string ~ "GLOBALS(=|[|%[0-9A-Z]{0,2})") { set $block_common_exploits 1 }
        if ($query_string ~ "_REQUEST(=|[|%[0-9A-Z]{0,2})") { set $block_common_exploits 1 }
        if ($query_string ~ "proc/self/environ") { set $block_common_exploits 1 }
        if ($query_string ~ "mosConfig_[a-zA-Z_]{1,21}(=|%3D)") { set $block_common_exploits 1 }
        if ($query_string ~ "(eval\(|shell_exec\(|exec\(|system\(unserialize\(|query\(|serialize\(|popen\(|pcntl_exec\(|passthru\(|require\(|include\(|require_once\(|include_once\(|create_function\(|proc_open\(|base64_decode\(|str_rot13\()") { set $block_common_exploits 1 }
        if ($block_common_exploits = 1) { return 416 }

        location = /favicon.ico {
            log_not_found off;
            access_log off;
        }

        location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
        }

        {% if BASIC_AUTH_ENABLED == "true" %}
        location ^~ /wp-login.php {
            auth_basic "Access secured";
            auth_basic_user_file /opt/htpasswd;

            try_files $fastcgi_script_name =404;
            fastcgi_pass localhost:9000;

            break;
        }
        {% endif %}

        {% if XMLRPC_DISABLED == "true" %}
        location = /xmlrpc.php {
            allow 172.0.1.1;
            deny all;
            access_log off;
            log_not_found off;
            return 444;
        }
        {% endif %}

        {% if HEALTH_CHECK_ALLOWED_SUBNET %}
        location ^~ /readiness.php {
            allow {{ HEALTH_CHECK_ALLOWED_SUBNET }};
            deny all;

            try_files $fastcgi_script_name =404;
            fastcgi_pass localhost:9000;
            break;
        }
        location ^~ /liveness.php {
            allow {{ HEALTH_CHECK_ALLOWED_SUBNET }};
            deny all;

            try_files $fastcgi_script_name =404;
            fastcgi_pass localhost:9000;
            break;
        }
        {% endif %}

        {% if DISABLE_DIRECT_CONTENT_PHP_EXECUTION == "true" %}
        location ~* /(?:uploads|files|wp-content|wp-includes|akismet)/.*.php$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        {% endif %}

        # https://wordpress.org/plugins/all-in-one-wp-security-and-firewall/
        location ^~ /wp-content/aiowps_backups {
            deny all;
        }

        location ~ /\.(svn|git)/* {
            deny all;
            access_log off;
            log_not_found off;

            break;
        }
        location ~ /\.ht {
            deny all;
            access_log off;
            log_not_found off;

            break;
        }

        location / {
            # This is cool because no php is touched for static content.
            # include the "?$args" part so non-default permalinks doesn't break when using query string
            try_files $uri $uri/ /index.php?$args;
        }

        location ~ \.php$ {
            try_files $fastcgi_script_name =404;
            fastcgi_pass localhost:9000;
        }

        location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
            expires max;
            log_not_found off;
        }

        location ~ /\.ht {
            deny all;
        }
    }
}
