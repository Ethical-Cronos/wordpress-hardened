{{- if .Values.backups.enabled }}
---
apiVersion: v1
kind: ConfigMap
metadata:
    name: {{ include "wordpress-hardened.fullname" . }}-backups-config
data:
    wp-filesystem-and-db-snapshot: |
        #!/bin/bash
        # Generated by `bmg backup`
        # Docs: https://github.com/riotkit-org/br-backup-maker
        
        #
        # This Backup procedure exports /var/www/riotkit (content root) and single database (as database dump) into a common tar.gz archive
        # To restore: Simply unpack archive at "/" (permissions preserved) and load dump from "/opt/backups/current.sql" into your database
        #
        
        set -eu
        
        mkdir -p /opt/backups
        
        # WORDPRESS_* variables are taken from a `kind: Secret` shared with WordPress deployment
        DB_COMMAND="mysqldump --skip-lock-tables --add-drop-table --add-drop-database --add-drop-trigger -h '${WORDPRESS_DB_HOST}' -u '${WORDPRESS_DB_USER}' -p${WORDPRESS_DB_PASSWORD} -P '3306' ${WORDPRESS_DB_NAME}"
        
        # fix for the definer issue
        DB_COMMAND="${DB_COMMAND} | sed -e 's/DEFINER[ ]*=[ ]*[^*]*\*/\*/'"
        
        # Secrets are taken from `kind: Secret` dedicated to Backup job deployment
        export BM_AUTH_TOKEN="${BACKUP_TOKEN}";
        export BM_COLLECTION_ID="${BACKUP_COLLECTION_ID}";
        export BM_PASSPHRASE="${BACKUP_GPG_PASSPHRASE}";
        
        # todo: Make it streamable instead of dumping into disk
        echo " >> Executing backup command and uploading result"
        eval "${DB_COMMAND}" > /opt/backups/current.sql
        tar -zcvf /opt/backups/current.tar.gz /var/www/riotkit /opt/backups/current.sql

        exec backup-maker make --url "${BACKUP_SERVER_URL}" \
            -c "cat /opt/backups/current.tar.gz" \
            --key "/mnt/backup-secrets/BACKUP_GPG_PRIVATE_KEY_CONTENT" \
            --recipient "${BACKUP_GPG_RECIPIENT}"\
            --log-level trace

{{- end }}
